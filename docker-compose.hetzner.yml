version: '3.8'

# Docker Compose configuration for Hetzner API Server
# Runs FastAPI application with Gunicorn + Uvicorn workers + Redis server

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: b9-api
    restart: unless-stopped
    ports:
      - "10000:10000"  # FastAPI port
    environment:
      # Supabase
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}

      # OpenAI
      - OPENAI_API_KEY=${OPENAI_API_KEY}

      # RapidAPI
      - RAPIDAPI_KEY=${RAPIDAPI_KEY}

      # Cloudflare R2
      - R2_ACCOUNT_ID=${R2_ACCOUNT_ID}
      - R2_ACCESS_KEY_ID=${R2_ACCESS_KEY_ID}
      - R2_SECRET_ACCESS_KEY=${R2_SECRET_ACCESS_KEY}
      - R2_BUCKET_NAME=${R2_BUCKET_NAME}
      - R2_PUBLIC_URL=${R2_PUBLIC_URL}
      - ENABLE_R2_STORAGE=true

      # Server Config
      - PORT=10000
      - ENVIRONMENT=production
      - LOG_LEVEL=info
      - WORKERS=8
      - MAX_WORKERS=8

      # Cron Job Authentication
      - CRON_SECRET=${CRON_SECRET}

      # Redis (local to API server)
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - ./logs:/app/logs
    networks:
      - b9-network
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:10000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: b9-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"  # Exposed for workers to connect
    volumes:
      - redis-data:/data
    networks:
      - b9-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  b9-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
