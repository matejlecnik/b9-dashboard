# Ruff Configuration - Fast Python Linter
# See: https://docs.astral.sh/ruff/

# Line length matching black
line-length = 100
target-version = "py38"

# Assume Python 3.8+
[lint]
# Enable specific rule sets
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "SIM",    # flake8-simplify
    "RUF",    # Ruff-specific rules
]

# Ignore specific rules
ignore = [
    "E501",   # Line too long (handled by black)
    "B008",   # Do not perform function calls in argument defaults
    "N805",   # First argument should be named self (allow 'cls' in @classmethod)
    "N802",   # Function name should be lowercase (allow camelCase for API routes)
]

# Allow autofix for all enabled rules
fixable = ["ALL"]
unfixable = []

# Exclude directories
exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    ".pytest_cache",
    ".mypy_cache",
    "build",
    "dist",
    "*.egg-info",
    ".eggs",
]

# Allow unused variables when prefixed with underscore
[lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py

[lint.isort]
known-first-party = ["app"]
force-single-line = false
lines-after-imports = 2

[lint.flake8-bugbear]
# Allow default mutable arguments for FastAPI dependencies
extend-immutable-calls = ["fastapi.Depends", "fastapi.Query", "fastapi.Path"]

[format]
# Use black-compatible formatting
quote-style = "double"
indent-style = "space"
line-ending = "auto"
