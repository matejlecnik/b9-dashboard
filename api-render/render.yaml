services:
  # Main API Service
  # Handles all API endpoints + manages scrapers via subprocess architecture
  - type: web
    name: b9-dashboard-api
    runtime: python3
    buildCommand: "./build.sh"
    startCommand: "python start.py"
    plan: starter
    region: oregon
    branch: main
    envVars:
      - key: PYTHON_VERSION
        value: 3.12.0
      - key: PORT
        value: 10000
      - key: ENVIRONMENT
        value: production
      - key: API_WORKERS
        value: 1
      - key: ENABLE_CORS
        value: true
      - key: LOG_LEVEL
        value: info
    autoDeploy: true
    rootDir: api-render
    healthCheckPath: "/health"

  # NOTE: The following services are DISABLED - functionality handled by main API service
  # Redis Cache Service - REMOVED (cache disabled, see requirements.txt)
  # - type: redis
  #   name: b9-dashboard-redis
  #   plan: starter
  #   maxmemoryPolicy: allkeys-lru
  #   region: oregon

  # Reddit Scraper - MANAGED VIA SUBPROCESS (start.py handles auto-start based on system_control table)
  # - type: worker
  #   name: reddit-scraper
  #   runtime: python3
  #   buildCommand: "pip install -r requirements.txt"
  #   startCommand: "python app/scrapers/reddit/reddit_controller.py"
  #   plan: starter
  #   region: oregon
  #   branch: main
  #   rootDir: api-render
  #   autoDeploy: true

  # Background Worker Service - REMOVED (worker.py does not exist)
  # Functionality handled via start.py subprocess architecture
  # - type: worker
  #   name: b9-dashboard-worker
  #   runtime: python3
  #   buildCommand: "./build.sh"
  #   startCommand: "python worker.py"
  #   plan: starter
  #   region: oregon
  #   branch: main
  #   rootDir: api-render
  #   autoDeploy: true

  # Cron Job Service - Log Cleanup (CRON-001: CRITICAL)
  # Prevents disk overflow by cleaning old logs daily
  - type: cron
    name: b9-log-cleanup
    runtime: python3
    buildCommand: "pip install -r requirements.txt"
    schedule: "0 2 * * *"  # Daily at 2 AM UTC
    startCommand: 'curl -X POST "${RENDER_SERVICE_URL}/api/cron/cleanup-logs?retention_days=30" -H "Authorization: Bearer ${CRON_SECRET}"'
    plan: starter
    region: oregon
    branch: main
    rootDir: api-render
    autoDeploy: true
    envVars:
      - key: RENDER_SERVICE_URL
        fromService:
          type: web
          name: b9-dashboard-api
          property: host
      - key: CRON_SECRET
        generateValue: true  # Render auto-generates secure random value
      - key: SUPABASE_URL
        sync: false  # Sync from main service
      - key: SUPABASE_SERVICE_ROLE_KEY
        sync: false  # Sync from main service

# NOTE: No additional databases needed - using Supabase for all data storage
# databases:
#   - name: b9-dashboard-queue
#     databaseName: b9_queue
#     user: b9_user
#     plan: free
#     region: oregon

# NOTE: Environment groups removed - Redis and separate database not used
# All configuration via environment variables set directly on the service
# envVarGroups:
#   - name: shared-config
#     envVars:
#       - key: REDIS_URL
#         fromService:
#           type: redis
#           name: b9-dashboard-redis
#           property: connectionString

# Blueprints for deployment
# blueprints:
#   - name: b9-complete-stack
#     services:
#       - b9-dashboard-api