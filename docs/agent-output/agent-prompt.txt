# Documentation Generation Task

## Objective
Convert 93 non-compliant .md files to terminal/JSON style per DOCUMENTATION_STANDARDS.md v2.0.0.

## Standards Reference
Read and strictly follow: /Users/matejlecnik/Desktop/b9_agency/b9_dashboard/docs/development/DOCUMENTATION_STANDARDS.md

Key requirements:
- Status box with format: ┌─ [TYPE] ─┐ │ ● [STATUS] │ ████░░░ XX% │ └─────┘
- Navigation JSON with parent/children/siblings/related
- Metrics section with real data
- Professional tone, no emojis except ✅ ⚠️ ❌
- Token-efficient (300-500 tokens target)
- Semantic version in footer: _Version: X.Y.Z | Updated: YYYY-MM-DD_

## Input Files (93 files)
- README.md
- api-render/README.md
- api-render/DOCUMENTATION_INDEX.md
- docs/INDEX.md
- docs/DOCUMENTATION_METRICS.md
- dashboard/README.md
- .github/workflows/README.md
- dashboard/docs/TESTING_GUIDELINES.md
- dashboard/docs/API_INTEGRATION_GUIDE.md
- dashboard/docs/DOCUMENTATION_MAP.md
... and 83 more files

## Directory Structure
```
.claude
.git
.git/hooks
.git/info
.git/logs
.git/logs/refs
.git/logs/refs/heads
.git/logs/refs/heads/rollback
.git/logs/refs/remotes
.git/logs/refs/remotes/origin
.git/objects
.git/objects/00
.git/objects/01
.git/objects/02
.git/objects/03
.git/objects/04
.git/objects/05
.git/objects/06
.git/objects/07
.git/objects/08
.git/objects/09
.git/objects/0a
.git/objects/0b
.git/objects/0c
.git/objects/0d
.git/objects/0e
.git/objects/0f
.git/objects/10
.git/objects/11
.git/objects/12
.git/objects/13
.git
```

## Codebase Metrics
- Total .md files: 1212
- Components: 121
- Hooks: 24

## Processing Instructions

For each file:
1. Read current content
2. Analyze file location and purpose
3. Generate compliant version with:
   - Status box with accurate progress
   - Navigation JSON (infer from directory structure)
   - Real metrics (count files in directory, calculate LOC if possible)
   - Professional tone
   - Semantic version (default to 1.0.0 for new docs)
4. Save to: docs/agent-output/[original-relative-path]
5. Track in manifest

## Output Structure
- Generate files in: docs/agent-output/
- Preserve directory structure
- Create manifest.json with:
  - Files processed
  - Files flagged for review
  - Validation results

## Validation
After processing, run:
```bash
python3 docs/scripts/validate-docs.py docs/agent-output/
```

Target: 95%+ compliance

## Edge Cases
If file is too complex or unusual:
- Flag in manifest.json for manual review
- Add comment explaining why
- Generate best-effort version

## Examples
Good examples to follow:
- ROADMAP.md
- CLAUDE.md (Mission Control style)
- docs/development/SYSTEM_IMPROVEMENT_PLAN.md

Start processing and report progress every 10 files.