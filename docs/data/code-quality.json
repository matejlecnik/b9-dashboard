{
  "timestamp": "2025-10-07T11:19:09.714193",
  "checks": {
    "typescript": {
      "tool": "TypeScript",
      "errors": [],
      "warnings": [],
      "error_count": 0,
      "warning_count": 0,
      "passed": true
    },
    "eslint": {
      "tool": "ESLint",
      "errors": [],
      "warnings": [
        {
          "file": "src/app/monitor/instagram/page.tsx",
          "line": 71,
          "column": 6,
          "code": "react-hooks/exhaustive-deps",
          "message": "React Hook useCallback has a missing dependency: 'API_URL'. Either include it or remove the dependency array."
        },
        {
          "file": "src/app/monitor/instagram/page.tsx",
          "line": 106,
          "column": 6,
          "code": "react-hooks/exhaustive-deps",
          "message": "React Hook useCallback has a missing dependency: 'API_URL'. Either include it or remove the dependency array."
        },
        {
          "file": "src/app/monitor/instagram/page.tsx",
          "line": 159,
          "column": 6,
          "code": "react-hooks/exhaustive-deps",
          "message": "React Hook useCallback has a missing dependency: 'API_URL'. Either include it or remove the dependency array."
        },
        {
          "file": "src/app/monitor/instagram/page.tsx",
          "line": 223,
          "column": 6,
          "code": "react-hooks/exhaustive-deps",
          "message": "React Hook useCallback has a missing dependency: 'API_URL'. Either include it or remove the dependency array."
        },
        {
          "file": "src/app/monitor/instagram/page.tsx",
          "line": 373,
          "column": 6,
          "code": "react-hooks/exhaustive-deps",
          "message": "React Hook useEffect has a missing dependency: 'API_URL'. Either include it or remove the dependency array."
        },
        {
          "file": "src/app/monitor/reddit/page.tsx",
          "line": 86,
          "column": 6,
          "code": "react-hooks/exhaustive-deps",
          "message": "React Hook useCallback has a missing dependency: 'API_URL'. Either include it or remove the dependency array."
        },
        {
          "file": "src/app/monitor/reddit/page.tsx",
          "line": 138,
          "column": 6,
          "code": "react-hooks/exhaustive-deps",
          "message": "React Hook useCallback has a missing dependency: 'API_URL'. Either include it or remove the dependency array."
        },
        {
          "file": "src/app/monitor/reddit/page.tsx",
          "line": 206,
          "column": 6,
          "code": "react-hooks/exhaustive-deps",
          "message": "React Hook useCallback has a missing dependency: 'API_URL'. Either include it or remove the dependency array."
        },
        {
          "file": "src/app/monitor/reddit/page.tsx",
          "line": 361,
          "column": 6,
          "code": "react-hooks/exhaustive-deps",
          "message": "React Hook useEffect has a missing dependency: 'API_URL'. Either include it or remove the dependency array."
        },
        {
          "file": "src/components/features/AddUserModal.tsx",
          "line": 185,
          "column": 6,
          "code": "react-hooks/exhaustive-deps",
          "message": "React Hook useCallback has a missing dependency: 'API_URL'. Either include it or remove the dependency array."
        },
        {
          "file": "src/lib/performance-monitor.tsx",
          "line": 297,
          "column": 117,
          "code": "react-hooks/exhaustive-deps",
          "message": "The ref value 'renderCount.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'renderCount.current' to a variable inside the effect, and use that variable in the cleanup function."
        }
      ],
      "error_count": 0,
      "warning_count": 11,
      "passed": true
    },
    "ruff": {
      "tool": "Ruff",
      "errors": [
        {
          "file": "test_local.py",
          "line": 39,
          "column": 21,
          "code": "RUF001",
          "message": "String contains ambiguous `\u2139` (INFORMATION SOURCE). Did you mean `i` (LATIN SMALL LETTER I)?"
        }
      ],
      "warnings": [],
      "error_count": 1,
      "warning_count": 0,
      "passed": false
    },
    "mypy": {
      "tool": "Mypy",
      "errors": [
        {
          "file": "app/services/tags/tag_definitions.py",
          "line": 132,
          "column": 0,
          "code": "mypy",
          "message": "Function \"builtins.any\" is not valid as a type  [valid-type]"
        },
        {
          "file": "app/scrapers/instagram/services/instagram_config.py",
          "line": 102,
          "column": 0,
          "code": "mypy",
          "message": "Dict entry 0 has incompatible type \"str\": \"Optional[str]\"; expected \"str\": \"str\"  [dict-item]"
        },
        {
          "file": "app/core/clients/api_pool.py",
          "line": 500,
          "column": 0,
          "code": "mypy",
          "message": "\"object\" has no attribute \"append\"  [attr-defined]"
        },
        {
          "file": "app/scrapers/reddit/public_reddit_api.py",
          "line": 75,
          "column": 0,
          "code": "mypy",
          "message": "Value of type \"Optional[dict[Any, Any]]\" is not indexable  [index]"
        },
        {
          "file": "app/scrapers/reddit/proxy_manager.py",
          "line": 31,
          "column": 0,
          "code": "mypy",
          "message": "Name \"get_supabase_client\" already defined (possibly by an import)  [no-redef]"
        },
        {
          "file": "app/scrapers/reddit/proxy_manager.py",
          "line": 108,
          "column": 0,
          "code": "mypy",
          "message": "Item \"None\" of \"Union[Any, SyncClient, None]\" has no attribute \"table\"  [union-attr]"
        },
        {
          "file": "app/scrapers/reddit/proxy_manager.py",
          "line": 306,
          "column": 0,
          "code": "mypy",
          "message": "Item \"None\" of \"Union[Any, SyncClient, None]\" has no attribute \"table\"  [union-attr]"
        },
        {
          "file": "app/scrapers/reddit/proxy_manager.py",
          "line": 316,
          "column": 0,
          "code": "mypy",
          "message": "Item \"None\" of \"Union[Any, SyncClient, None]\" has no attribute \"table\"  [union-attr]"
        },
        {
          "file": "app/scrapers/reddit/proxy_manager.py",
          "line": 321,
          "column": 0,
          "code": "mypy",
          "message": "Item \"None\" of \"Union[Any, SyncClient, None]\" has no attribute \"table\"  [union-attr]"
        },
        {
          "file": "app/scrapers/reddit/proxy_manager.py",
          "line": 356,
          "column": 0,
          "code": "mypy",
          "message": "Item \"None\" of \"Union[Any, SyncClient, None]\" has no attribute \"table\"  [union-attr]"
        },
        {
          "file": "app/scrapers/reddit/proxy_manager.py",
          "line": 363,
          "column": 0,
          "code": "mypy",
          "message": "Item \"None\" of \"Union[Any, SyncClient, None]\" has no attribute \"table\"  [union-attr]"
        },
        {
          "file": "app/middleware/error_handler.py",
          "line": 14,
          "column": 0,
          "code": "mypy",
          "message": "Module \"fastapi.exceptions\" has no attribute \"ValidationError\"; maybe \"RequestValidationError\" or \"ResponseValidationError\"?  [attr-defined]"
        },
        {
          "file": "app/middleware/error_handler.py",
          "line": 203,
          "column": 0,
          "code": "mypy",
          "message": "Item \"None\" of \"Optional[SyncClient]\" has no attribute \"table\"  [union-attr]"
        },
        {
          "file": "app/middleware/error_handler.py",
          "line": 217,
          "column": 0,
          "code": "mypy",
          "message": "Dict entry 8 has incompatible type \"str\": \"Optional[str]\"; expected \"str\": \"Collection[str]\"  [dict-item]"
        },
        {
          "file": "app/middleware/error_handler.py",
          "line": 218,
          "column": 0,
          "code": "mypy",
          "message": "Dict entry 9 has incompatible type \"str\": \"Optional[str]\"; expected \"str\": \"Collection[str]\"  [dict-item]"
        },
        {
          "file": "app/jobs/log_cleanup.py",
          "line": 48,
          "column": 0,
          "code": "mypy",
          "message": "Item \"None\" of \"Optional[SyncClient]\" has no attribute \"table\"  [union-attr]"
        },
        {
          "file": "app/jobs/log_cleanup.py",
          "line": 69,
          "column": 0,
          "code": "mypy",
          "message": "Item \"None\" of \"Optional[SyncClient]\" has no attribute \"table\"  [union-attr]"
        },
        {
          "file": "app/core/lifespan.py",
          "line": 77,
          "column": 0,
          "code": "mypy",
          "message": "Argument 2 to \"TagCategorizationService\" has incompatible type \"Optional[str]\"; expected \"str\"  [arg-type]"
        },
        {
          "file": "app/api/instagram/related_creators.py",
          "line": 299,
          "column": 0,
          "code": "mypy",
          "message": "Unused \"type: ignore\" comment  [unused-ignore]"
        },
        {
          "file": "app/api/instagram/related_creators.py",
          "line": 325,
          "column": 0,
          "code": "mypy",
          "message": "Unused \"type: ignore\" comment  [unused-ignore]"
        },
        {
          "file": "app/api/instagram/related_creators.py",
          "line": 367,
          "column": 0,
          "code": "mypy",
          "message": "Unused \"type: ignore\" comment  [unused-ignore]"
        },
        {
          "file": "app/scrapers/reddit/reddit_controller.py",
          "line": 24,
          "column": 0,
          "code": "mypy",
          "message": "Name \"get_supabase_client\" already defined (possibly by an import)  [no-redef]"
        },
        {
          "file": "app/scrapers/reddit/reddit_controller.py",
          "line": 45,
          "column": 0,
          "code": "mypy",
          "message": "Item \"None\" of \"Optional[SyncClient]\" has no attribute \"table\"  [union-attr]"
        },
        {
          "file": "app/scrapers/reddit/reddit_controller.py",
          "line": 60,
          "column": 0,
          "code": "mypy",
          "message": "Item \"None\" of \"Optional[SyncClient]\" has no attribute \"table\"  [union-attr]"
        },
        {
          "file": "app/scrapers/reddit/reddit_controller.py",
          "line": 75,
          "column": 0,
          "code": "mypy",
          "message": "Item \"None\" of \"Optional[SyncClient]\" has no attribute \"table\"  [union-attr]"
        },
        {
          "file": "app/scrapers/reddit/reddit_controller.py",
          "line": 128,
          "column": 0,
          "code": "mypy",
          "message": "Cannot assign to a type  [misc]"
        },
        {
          "file": "app/scrapers/reddit/reddit_controller.py",
          "line": 139,
          "column": 0,
          "code": "mypy",
          "message": "Item \"None\" of \"Optional[SyncClient]\" has no attribute \"table\"  [union-attr]"
        },
        {
          "file": "app/scrapers/reddit/reddit_controller.py",
          "line": 204,
          "column": 0,
          "code": "mypy",
          "message": "Item \"None\" of \"Optional[SyncClient]\" has no attribute \"table\"  [union-attr]"
        },
        {
          "file": "app/scrapers/instagram/instagram_controller.py",
          "line": 274,
          "column": 0,
          "code": "mypy",
          "message": "Cannot determine type of \"_last_wait_minute\"  [has-type]"
        },
        {
          "file": "app/api/instagram/creators.py",
          "line": 29,
          "column": 0,
          "code": "mypy",
          "message": "Name \"Config\" already defined (possibly by an import)  [no-redef]"
        },
        {
          "file": "app/api/instagram/creators.py",
          "line": 30,
          "column": 0,
          "code": "mypy",
          "message": "Name \"InstagramScraperUnified\" already defined (possibly by an import)  [no-redef]"
        },
        {
          "file": "app/api/instagram/creators.py",
          "line": 83,
          "column": 0,
          "code": "mypy",
          "message": "Cannot assign to a method  [method-assign]"
        }
      ],
      "warnings": [],
      "error_count": 32,
      "warning_count": 0,
      "passed": false
    },
    "design_system": {
      "tool": "Design System",
      "errors": [],
      "warnings": [],
      "error_count": 0,
      "warning_count": 0,
      "passed": true
    }
  },
  "summary": {
    "total_errors": 33,
    "total_warnings": 11,
    "passed": [
      "typescript",
      "eslint",
      "design_system"
    ]
  }
}